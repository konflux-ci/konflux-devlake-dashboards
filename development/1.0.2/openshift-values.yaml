# OpenShift-specific modifications for DevLake
# Apply this on top of default values: helm upgrade --install devlake devlake/devlake -f openshift-values.yaml
mysql:
  # if use external mysql server, please set true
  # by default using false, chart will create a single mysql instance
  useExternal: true
  # External MySQL server configuration
  externalServer: "konflux-devlake-database.ch82sokyapv1.us-west-2.rds.amazonaws.com"  # Replace with your actual MySQL host
  externalPort: 3306

# OpenShift security context fixes
grafana:
  image:
    repository: devlake.docker.scarf.sh/apache/devlake-dashboard
    tag: v1.0.2
  podSecurityContext: {}
  securityContext:
    fsGroup: null
    runAsGroup: null
    runAsUser: null
  # Disable the init container that requires root, which is blocked by default.
  initChownData:
    enabled: false
  envFromSecrets:
    - name: "devlake-database-auth"
  # Environment variables for MySQL configuration
  env:
    TZ: "UTC"
    # Grafana server configuration for subpath serving
    GF_SERVER_SERVE_FROM_SUBPATH: "true"
    GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/grafana/"
  # Grafana configuration using grafana.ini
  grafana.ini:
    server:
      serve_from_subpath: "true"
      root_url: "%(protocol)s://%(domain)s/grafana/"
    # auth.google:
    #   enabled: true
    #   client_id: "add-here"
    #   client_secret: "add-here"
    #   scopes: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email openid"
    #   auth_url: "https://accounts.google.com/o/oauth2/auth"
    #   token_url: "https://accounts.google.com/o/oauth2/token"
    #   api_url: "https://www.googleapis.com/oauth2/v1/userinfo"
    #   allowed_domains: "redhat.com"
    #   allow_sign_up: true
    #   # Explicit redirect URI to ensure correct URL
    #   redirect_uri: "https://devlake-ui-devlake.apps.rosa.konflux-qe.zmr9.p3.openshiftapps.com/grafana"

lake:
  securityContext: {}
  containerSecurityContext: {}
  # Disable remote plugins to avoid poetry permission issues
  envs:
    REMOTE_PLUGIN_DIR: ""
    DISABLED_REMOTE_PLUGINS: "true"
    API_REQUESTS_PER_HOUR: "100000"
    LOGGING_DIR: "/tmp"
  # Use both ConfigMap and Secret for MySQL configuration (following PR #337 pattern)
  envFrom:
    - configMapRef:
        name: devlake-config
    - secretRef:
        name: devlake-database-auth
  # Disable all init containers for lake

ui:
  securityContext: {}
  containerSecurityContext: {}
  basicAuth:
    enabled: true
    user: admin
    password: admin
    autoCreateSecret: true
    secretName: ""
# Use ClusterIP services (routes will be created separately)
service:
  type: ClusterIP

# Disable ingress (use routes instead)
ingress:
  enabled: false

# Ensure secrets are created properly
option:
  autoCreateSecret: false
  database: mysql
  connectionSecretName: "devlake-database-auth"

# OpenShift Routes and Configuration
extraResources:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: devlake-ui
      labels: {}
    spec:
      to:
        kind: Service
        name: devlake-ui
        weight: 100
      port:
        targetPort: ui
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
